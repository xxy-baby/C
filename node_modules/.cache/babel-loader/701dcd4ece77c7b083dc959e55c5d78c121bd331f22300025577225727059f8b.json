{"ast":null,"code":"import React,{useState}from'react';import'./styles.css';// 假设你有一个styles.css文件来定义样式\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const boardSize=15;// 定义棋盘大小为15x15\nconst initialSquares=Array(boardSize*boardSize).fill(null);const maxUndoMoves=3;// 每个玩家最多悔棋3次\nconst calculateWinner=squares=>{// 检查所有可能的胜利组合\nconst lines=[// 横向\n...Array(boardSize).fill(null).map((_,i)=>Array(boardSize).fill(null).map((_,j)=>i*boardSize+j)),// 纵向\n...Array(boardSize).fill(null).map((_,j)=>Array(boardSize).fill(null).map((_,i)=>i*boardSize+j)),// 正斜线\n...Array(boardSize-4).fill(null).map((_,i)=>Array(5).fill(null).map((_,j)=>i*boardSize+j+j)),// 反斜线\n...Array(boardSize-4).fill(null).map((_,i)=>Array(5).fill(null).map((_,j)=>i*boardSize+(boardSize-1-j)-j))];for(let line of lines){for(let i=0;i<=line.length-5;i++){const row=line.slice(i,i+5);const first=squares[row[0]];if(first&&row.every(square=>squares[square]===first)){return first;}}}return null;};const App=()=>{const[squares,setSquares]=useState(initialSquares);const[xIsNext,setXIsNext]=useState(true);const[history,setHistory]=useState([initialSquares]);const[stepNumber,setStepNumber]=useState(0);const[undoCount,setUndoCount]=useState({X:0,O:0});// 跟踪每个玩家的悔棋次数\nconst handleClick=i=>{const newSquares=squares.slice();if(newSquares[i]||calculateWinner(newSquares)){return;}newSquares[i]=xIsNext?'X':'O';setSquares(newSquares);setXIsNext(!xIsNext);const newHistory=[...history.slice(0,stepNumber+1),newSquares];setHistory(newHistory);setStepNumber(newHistory.length-1);const winner=calculateWinner(newSquares);if(winner){alert(`Winner: ${winner}`);}};const jumpTo=step=>{setStepNumber(step);setSquares(history[step]);setXIsNext(step%2===0);};const undoMove=()=>{if(stepNumber>0){const currentPlayer=xIsNext?'X':'O';if(undoCount[currentPlayer]<maxUndoMoves){jumpTo(stepNumber-1);setUndoCount({...undoCount,[currentPlayer]:undoCount[currentPlayer]+1});}else{alert(`Player ${currentPlayer} has reached the maximum number of undo moves.`);}}};const renderSquare=i=>/*#__PURE__*/_jsx(\"button\",{className:\"square\",onClick:()=>handleClick(i),children:squares[i]});const renderBoard=()=>{let board=[];for(let i=0;i<boardSize;i++){let row=[];for(let j=0;j<boardSize;j++){row.push(renderSquare(i*boardSize+j));}board.push(/*#__PURE__*/_jsx(\"div\",{className:\"board-row\",children:row}));}return board;};const restartGame=()=>{setSquares(initialSquares);setXIsNext(true);setHistory([initialSquares]);setStepNumber(0);setUndoCount({X:0,O:0});// 重置悔棋次数\n};return/*#__PURE__*/_jsxs(\"div\",{className:\"game\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"game-board\",children:renderBoard()}),/*#__PURE__*/_jsxs(\"div\",{className:\"game-info\",children:[/*#__PURE__*/_jsx(\"div\",{children:`Next player: ${xIsNext?'X':'O'}`}),/*#__PURE__*/_jsx(\"button\",{onClick:restartGame,children:\"Restart Game\"}),/*#__PURE__*/_jsx(\"button\",{onClick:undoMove,children:\"Undo Move\"})]})]});};export default App;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","boardSize","initialSquares","Array","fill","maxUndoMoves","calculateWinner","squares","lines","map","_","i","j","line","length","row","slice","first","every","square","App","setSquares","xIsNext","setXIsNext","history","setHistory","stepNumber","setStepNumber","undoCount","setUndoCount","X","O","handleClick","newSquares","newHistory","winner","alert","jumpTo","step","undoMove","currentPlayer","renderSquare","className","onClick","children","renderBoard","board","push","restartGame"],"sources":["D:/web-project/五子棋/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './styles.css'; // 假设你有一个styles.css文件来定义样式\n\nconst boardSize = 15; // 定义棋盘大小为15x15\nconst initialSquares = Array(boardSize * boardSize).fill(null);\nconst maxUndoMoves = 3; // 每个玩家最多悔棋3次\n\nconst calculateWinner = (squares) => {\n  // 检查所有可能的胜利组合\n  const lines = [\n    // 横向\n    ...Array(boardSize).fill(null).map((_, i) => Array(boardSize).fill(null).map((_, j) => i * boardSize + j)),\n    // 纵向\n    ...Array(boardSize).fill(null).map((_, j) => Array(boardSize).fill(null).map((_, i) => i * boardSize + j)),\n    // 正斜线\n    ...Array(boardSize - 4).fill(null).map((_, i) => Array(5).fill(null).map((_, j) => i * boardSize + j + j)),\n    // 反斜线\n    ...Array(boardSize - 4).fill(null).map((_, i) => Array(5).fill(null).map((_, j) => i * boardSize + (boardSize - 1 - j) - j)),\n  ];\n\n  for (let line of lines) {\n    for (let i = 0; i <= line.length - 5; i++) {\n      const row = line.slice(i, i + 5);\n      const first = squares[row[0]];\n      if (first && row.every((square) => squares[square] === first)) {\n        return first;\n      }\n    }\n  }\n  return null;\n};\n\nconst App = () => {\n  const [squares, setSquares] = useState(initialSquares);\n  const [xIsNext, setXIsNext] = useState(true);\n  const [history, setHistory] = useState([initialSquares]);\n  const [stepNumber, setStepNumber] = useState(0);\n  const [undoCount, setUndoCount] = useState({ X: 0, O: 0 }); // 跟踪每个玩家的悔棋次数\n\n  const handleClick = (i) => {\n    const newSquares = squares.slice();\n    if (newSquares[i] || calculateWinner(newSquares)) {\n      return;\n    }\n    newSquares[i] = xIsNext ? 'X' : 'O';\n    setSquares(newSquares);\n    setXIsNext(!xIsNext);\n    const newHistory = [...history.slice(0, stepNumber + 1), newSquares];\n    setHistory(newHistory);\n    setStepNumber(newHistory.length - 1);\n    const winner = calculateWinner(newSquares);\n    if (winner) {\n      alert(`Winner: ${winner}`);\n    }\n  };\n\n  const jumpTo = (step) => {\n    setStepNumber(step);\n    setSquares(history[step]);\n    setXIsNext((step % 2) === 0);\n  };\n\n  const undoMove = () => {\n    if (stepNumber > 0) {\n      const currentPlayer = xIsNext ? 'X' : 'O';\n      if (undoCount[currentPlayer] < maxUndoMoves) {\n        jumpTo(stepNumber - 1);\n        setUndoCount({ ...undoCount, [currentPlayer]: undoCount[currentPlayer] + 1 });\n      } else {\n        alert(`Player ${currentPlayer} has reached the maximum number of undo moves.`);\n      }\n    }\n  };\n\n  const renderSquare = (i) => (\n    <button className=\"square\" onClick={() => handleClick(i)}>\n      {squares[i]}\n    </button>\n  );\n\n  const renderBoard = () => {\n    let board = [];\n    for (let i = 0; i < boardSize; i++) {\n      let row = [];\n      for (let j = 0; j < boardSize; j++) {\n        row.push(renderSquare(i * boardSize + j));\n      }\n      board.push(<div className=\"board-row\">{row}</div>);\n    }\n    return board;\n  };\n\n  const restartGame = () => {\n    setSquares(initialSquares);\n    setXIsNext(true);\n    setHistory([initialSquares]);\n    setStepNumber(0);\n    setUndoCount({ X: 0, O: 0 }); // 重置悔棋次数\n  };\n\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        {renderBoard()}\n      </div>\n      <div className=\"game-info\">\n        <div>{`Next player: ${xIsNext ? 'X' : 'O'}`}</div>\n        <button onClick={restartGame}>Restart Game</button>\n        <button onClick={undoMove}>Undo Move</button>\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}