{"ast":null,"code":"var _jsxFileName = \"D:\\\\web-project\\\\\\u4E95\\u5B57\\u68CB\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './styles.css'; // 假设你有一个styles.css文件来定义样式\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst boardSize = 15; // 定义棋盘大小为15x15\nconst initialSquares = Array(boardSize * boardSize).fill(null);\nconst calculateWinner = squares => {\n  // 以下为示例代码，您需要实现具体的胜利条件检查逻辑\n  for (let i = 0; i < boardSize; i++) {\n    for (let j = 0; j < boardSize; j++) {\n      const index = i * boardSize + j;\n      if (squares[index]) {\n        // 检查水平方向\n        if (j <= boardSize - 5 && squares[index] === squares[index + 1] && squares[index] === squares[index + 2] && squares[index] === squares[index + 3] && squares[index] === squares[index + 4]) {\n          return squares[index];\n        }\n        // 检查垂直方向\n        if (i <= boardSize - 5 && squares[index] === squares[index + boardSize] && squares[index] === squares[index + 2 * boardSize] && squares[index] === squares[index + 3 * boardSize] && squares[index] === squares[index + 4 * boardSize]) {\n          return squares[index];\n        }\n        // 检查主对角线方向\n        if (i <= boardSize - 5 && j <= boardSize - 5 && squares[index] === squares[index + boardSize + 1] && squares[index] === squares[index + 2 * boardSize + 2] && squares[index] === squares[index + 3 * boardSize + 3] && squares[index] === squares[index + 4 * boardSize + 4]) {\n          return squares[index];\n        }\n        // 检查副对角线方向\n        if (i >= 4 && j <= boardSize - 5 && squares[index] === squares[index - boardSize + 1] && squares[index] === squares[index - 2 * boardSize + 2] && squares[index] === squares[index - 3 * boardSize + 3] && squares[index] === squares[index - 4 * boardSize + 4]) {\n          return squares[index];\n        }\n      }\n    }\n  }\n  return null;\n};\nconst App = () => {\n  _s();\n  const [squares, setSquares] = useState(initialSquares);\n  const [xIsNext, setXIsNext] = useState(true);\n  const handleClick = i => {\n    const squaresCopy = squares.slice();\n    if (squaresCopy[i] || calculateWinner(squaresCopy)) {\n      return;\n    }\n    squaresCopy[i] = xIsNext ? 'X' : 'O';\n    setSquares(squaresCopy);\n    setXIsNext(!xIsNext);\n    const winner = calculateWinner(squaresCopy);\n    if (winner) {\n      alert(`Winner: ${winner}`);\n    }\n  };\n  const renderSquare = i => /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: () => handleClick(i),\n    children: squares[i]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n  const renderBoard = () => {\n    let board = [];\n    for (let i = 0; i < boardSize; i++) {\n      let row = [];\n      for (let j = 0; j < boardSize; j++) {\n        row.push(renderSquare(i * boardSize + j));\n      }\n      board.push(/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: row\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 18\n      }, this));\n    }\n    return board;\n  };\n  const restartGame = () => {\n    setSquares(initialSquares);\n    setXIsNext(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: renderBoard()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: `Next player: ${xIsNext ? 'X' : 'O'}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: restartGame,\n        children: \"Restart Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"VJel+oTETJkvUbfsQHBYiyR3/50=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","boardSize","initialSquares","Array","fill","calculateWinner","squares","i","j","index","App","_s","setSquares","xIsNext","setXIsNext","handleClick","squaresCopy","slice","winner","alert","renderSquare","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","renderBoard","board","row","push","restartGame","_c","$RefreshReg$"],"sources":["D:/web-project/井字棋/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './styles.css'; // 假设你有一个styles.css文件来定义样式\n\nconst boardSize = 15; // 定义棋盘大小为15x15\nconst initialSquares = Array(boardSize * boardSize).fill(null);\n\nconst calculateWinner = (squares) => {\n  // 以下为示例代码，您需要实现具体的胜利条件检查逻辑\n  for (let i = 0; i < boardSize; i++) {\n    for (let j = 0; j < boardSize; j++) {\n      const index = i * boardSize + j;\n      if (squares[index]) {\n        // 检查水平方向\n        if (j <= boardSize - 5 && squares[index] === squares[index + 1] && squares[index] === squares[index + 2] && squares[index] === squares[index + 3] && squares[index] === squares[index + 4]) {\n          return squares[index];\n        }\n        // 检查垂直方向\n        if (i <= boardSize - 5 && squares[index] === squares[index + boardSize] && squares[index] === squares[index + 2 * boardSize] && squares[index] === squares[index + 3 * boardSize] && squares[index] === squares[index + 4 * boardSize]) {\n          return squares[index];\n        }\n        // 检查主对角线方向\n        if (i <= boardSize - 5 && j <= boardSize - 5 && squares[index] === squares[index + boardSize + 1] && squares[index] === squares[index + 2 * boardSize + 2] && squares[index] === squares[index + 3 * boardSize + 3] && squares[index] === squares[index + 4 * boardSize + 4]) {\n          return squares[index];\n        }\n        // 检查副对角线方向\n        if (i >= 4 && j <= boardSize - 5 && squares[index] === squares[index - boardSize + 1] && squares[index] === squares[index - 2 * boardSize + 2] && squares[index] === squares[index - 3 * boardSize + 3] && squares[index] === squares[index - 4 * boardSize + 4]) {\n          return squares[index];\n        }\n      }\n    }\n  }\n  return null;\n};\n\nconst App = () => {\n  const [squares, setSquares] = useState(initialSquares);\n  const [xIsNext, setXIsNext] = useState(true);\n\n  const handleClick = (i) => {\n    const squaresCopy = squares.slice();\n    if (squaresCopy[i] || calculateWinner(squaresCopy)) {\n      return;\n    }\n    squaresCopy[i] = xIsNext ? 'X' : 'O';\n    setSquares(squaresCopy);\n    setXIsNext(!xIsNext);\n    const winner = calculateWinner(squaresCopy);\n    if (winner) {\n      alert(`Winner: ${winner}`);\n    }\n  };\n\n  const renderSquare = (i) => (\n    <button className=\"square\" onClick={() => handleClick(i)}>\n      {squares[i]}\n    </button>\n  );\n\n  const renderBoard = () => {\n    let board = [];\n    for (let i = 0; i < boardSize; i++) {\n      let row = [];\n      for (let j = 0; j < boardSize; j++) {\n        row.push(renderSquare(i * boardSize + j));\n      }\n      board.push(<div className=\"board-row\">{row}</div>);\n    }\n    return board;\n  };\n\n  const restartGame = () => {\n    setSquares(initialSquares);\n    setXIsNext(true);\n  };\n\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        {renderBoard()}\n      </div>\n      <div className=\"game-info\">\n        <div>{`Next player: ${xIsNext ? 'X' : 'O'}`}</div>\n        <button onClick={restartGame}>Restart Game</button>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}